#
# In most cases, you only need to modify this first section.
#

EXE = hotplug
OBJS = hotplug.o


all dynamic: conditional_build

clean: generic_clean
	rm -f $(INSTALL_DIR)/bin/$(EXE)

binaryonly_dist_clean: clean generic_binaryonly_dist_clean
	rm -f Makefile.fullsrc

CURR_DIR := $(shell pwd)
BUILD_DIR:=$(subst /userspace, /userspace,$(CURR_DIR))
BUILD_DIR:=$(word 1, $(BUILD_DIR))
include $(BUILD_DIR)/make.common

ifneq ($(strip $(BUILD_BRCM_CMS)),)
conditional_build: $(OBJS) $(EXE) generic_exe_install
	mkdir -p $(INSTALL_DIR)/sbin/
	ln -sf ../bin/$(EXE) $(INSTALL_DIR)/sbin/hotplug
else
conditional_build:
	@echo "skipping hotplug (not configured)"
endif





#
# Set our CommEngine directory (by splitting the pwd into two words
# at /userspace and taking the first word only).
# Then include the common defines under CommEngine.
#

WIRELESS_DRIVER_PATH=$(BRCMDRIVERS_DIR)/broadcom/net/wl/bcm9$(BRCM_CHIP)

#
# Private apps and libs are allowed to include header files from the
# private and public directories.
#
# WARNING: Do not modify this section unless you understand the
# license implications of what you are doing.
#
ALLOWED_INCLUDE_PATHS := -I.\
                         -I$(BUILD_DIR)/userspace/public/include  \
                         -I$(BUILD_DIR)/userspace/public/include/$(OALDIR) \
                         -I$(BUILD_DIR)/userspace/private/include  \
                         -I$(BUILD_DIR)/userspace/private/include/$(OALDIR)

#
# Private apps and libs are allowed to link with libraries from the
# private and public directories.
#
# WARNING: Do not modify this section unless you understand the
# license implications of what you are doing.
#
ALLOWED_LIB_DIRS := /lib:/lib/private:/lib/public

ifeq (exists, $(shell [ -d $(WIRELESS_DRIVER_PATH)/wps ] && echo exists))
    CFLAGS += -DSUPPORT_WSC
endif


ifneq ($(strip $(BUILD_NAS)),)
	OBJS += hotplug_net.o hotplug_net_nas.o
	CFLAGS += -DSUPPORT_NAS
endif

ifneq ($(strip $(LINUX_KERNEL_USBMASS)),)
	OBJS += hotplug_storage.o
	CFLAGS += -DSUPPORT_STORAGE
endif


ifneq ($(strip $(BUILD_STORAGESERVICE)),)
   LIBS += -lcms_msg $(CMS_COMMON_LIBS)
endif

ifneq ($(strip $(WIRELESS)),)
LIBS += -lwlcsm
endif

#ifdef DMP_DEVICE2_USBHOSTSBASIC_1
	OBJS += hotplug_usb.o
#endif

# treat all warnings as errors
CUSTOM_CFLAGS += -Werror -Wfatal-errors

#
# Implicit rule will make the .c into a .o
# Implicit rule is $(CC) -c $(CPPFLAGS) $(CFLAGS)
# See Section 10.2 of Gnu Make manual
# 
$(EXE): $(OBJS) 
	$(CC) $(BCM_LD_FLAGS) -o $@ $(OBJS) -Wl,-rpath,$(CMS_LIB_RPATH) $(CMS_LIB_PATH) $(LIBS)


#
# Include the rule for making dependency files.
# The '-' in front of the second include suppresses
# error messages when make cannot find the .d files.
# It will just regenerate them.
# See Section 4.14 of Gnu Make.
#

include $(BUILD_DIR)/make.deprules

-include $(OBJS:.o=.d)                      


