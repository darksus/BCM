/******************************************************************************
 *
 * Copyright (c) 2009   Broadcom Corporation
 * All Rights Reserved
 *
 * <:label-BRCM:2009:proprietary:standard
 * 
 *  This program is the proprietary software of Broadcom and/or its
 *  licensors, and may only be used, duplicated, modified or distributed pursuant
 *  to the terms and conditions of a separate, written license agreement executed
 *  between you and Broadcom (an "Authorized License").  Except as set forth in
 *  an Authorized License, Broadcom grants no license (express or implied), right
 *  to use, or waiver of any kind with respect to the Software, and Broadcom
 *  expressly reserves all rights in and to the Software and all intellectual
 *  property rights therein.  IF YOU HAVE NO AUTHORIZED LICENSE, THEN YOU HAVE
 *  NO RIGHT TO USE THIS SOFTWARE IN ANY WAY, AND SHOULD IMMEDIATELY NOTIFY
 *  BROADCOM AND DISCONTINUE ALL USE OF THE SOFTWARE.
 * 
 *  Except as expressly set forth in the Authorized License,
 * 
 *  1. This program, including its structure, sequence and organization,
 *     constitutes the valuable trade secrets of Broadcom, and you shall use
 *     all reasonable efforts to protect the confidentiality thereof, and to
 *     use this information only in connection with your use of Broadcom
 *     integrated circuit products.
 * 
 *  2. TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
 *     AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS OR
 *     WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
 *     RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND
 *     ALL IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT,
 *     FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR
 *     COMPLETENESS, QUIET ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE
 *     TO DESCRIPTION. YOU ASSUME THE ENTIRE RISK ARISING OUT OF USE OR
 *     PERFORMANCE OF THE SOFTWARE.
 * 
 *  3. TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM OR
 *     ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
 *     INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY
 *     WAY RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN
 *     IF BROADCOM HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES;
 *     OR (ii) ANY AMOUNT IN EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE
 *     SOFTWARE ITSELF OR U.S. $1, WHICHEVER IS GREATER. THESE LIMITATIONS
 *     SHALL APPLY NOTWITHSTANDING ANY FAILURE OF ESSENTIAL PURPOSE OF ANY
 *     LIMITED REMEDY.
 * :>
 *
 ************************************************************************/

/***************************************************************************
 *
 *    Copyright (c) 2008-2009, Broadcom Corporation
 *    All Rights Reserved
 *    Confidential Property of Broadcom Corporation
 *
 * THIS SOFTWARE MAY ONLY BE USED SUBJECT TO AN EXECUTED SOFTWARE LICENSE
 * AGREEMENT  BETWEEN THE USER AND BROADCOM.  YOU HAVE NO RIGHT TO USE OR
 * EXPLOIT THIS MATERIAL EXCEPT SUBJECT TO THE TERMS OF SUCH AN AGREEMENT.
 *
 * Description: MoCA userland daemon
 *
 ***************************************************************************/

/* WARNING: 
 * Do not edit by hand.
 * This file contains autogenerated code, see <root>/Tools/MmpGen/ gen_api.pl api.txt 
 */

#define MOCAD_MMP_VERSION  1476373087 // Automatically generated - Do not edit.

struct mocad_ctx;

void mocad_set_band_defaults(struct mocad_ctx *ctx, uint32_t flags);
void mocad_set_defaults(struct mocad_ctx *ctx, uint32_t flags);

int mocad_set_anytime(struct mocad_ctx *ctx, uint32_t ie_type, uint32_t *data, uint32_t len, void *wr);
int mocad_get_anytime(struct mocad_ctx *ctx, uint32_t ie_type, uint32_t *data, unsigned char *wr);
int mocad_set_all_anytime(struct mocad_ctx *ctx);

struct moca_any_time {
/* Start of auto-generated anytime struct - Do not edit */
/* Need at least one line here for gen_api to work */
   uint32_t preferred_nc;
   uint32_t single_channel_operation;
   uint32_t continuous_power_tx_mode;
   int32_t continuous_rx_mode_attn;
   uint32_t lof;
   uint32_t max_nbas_primary;
   uint32_t ps_swch_tx1;
   uint32_t ps_swch_tx2;
   uint32_t ps_swch_rx1;
   uint32_t ps_swch_rx2;
   uint32_t ps_swch_rx3;
   uint32_t bonding;
   uint32_t listening_freq_mask;
   uint32_t listening_duration;
   uint32_t limit_traffic;
   uint32_t remote_man;
   uint32_t c4_moca20_en;
   uint32_t power_save_mechanism_dis;
   uint32_t psm_config;
   uint32_t use_ext_data_mem;
   uint32_t aif_mode;
   uint32_t prof_pad_ctrl_deg_6802c0_bonding;
   uint32_t prop_bonding_compatibility_mode;
   uint32_t rdeg_3450;
   uint32_t phy_clock;
   uint32_t max_nbas_secondary;
   struct moca_mac_addr_int mac_addr;
   uint32_t beacon_channel_set;
   struct moca_max_tx_power_tune max_tx_power_tune;
   struct moca_max_tx_power_tune_sec_ch max_tx_power_tune_sec_ch;
   struct moca_rx_power_tune rx_power_tune;
   uint32_t impedance_mode_bonding;
   uint32_t rework_6802;
   struct moca_prof_pad_ctrl_deg_6802c0_single prof_pad_ctrl_deg_6802c0_single;
   uint32_t miscval;
   uint32_t en_capable;
   uint32_t lof_update;
   int32_t primary_ch_offset;
   uint32_t assertText;
   uint32_t wdog_enable;
   uint32_t miscval2;
   int32_t secondary_ch_offset;
   uint32_t amp_type;
   uint32_t tpc_en;
   int32_t max_tx_power;
   uint32_t beacon_pwr_reduction;
   uint32_t beacon_pwr_reduction_en;
   uint32_t bo_mode;
   uint32_t qam256_capability;
   uint32_t otf_en;
   uint32_t star_topology_en;
   uint32_t ofdma_en;
   uint32_t min_bw_alarm_threshold;
   uint32_t en_max_rate_in_max_bo;
   uint32_t target_phy_rate_qam128;
   uint32_t target_phy_rate_qam256;
   uint32_t sapm_en;
   int32_t arpl_th_50;
   uint32_t rlapm_en;
   uint32_t freq_shift;
   uint32_t max_phy_rate;
   uint32_t bandwidth;
   int32_t arpl_th_100;
   uint32_t adc_mode;
   uint32_t max_phy_rate_turbo;
   uint32_t cp_const;
   uint32_t preamble_uc_const;
   uint32_t cp_margin_increase;
   uint32_t ac_cc_shift;
   uint32_t mfc_th_increase;
   uint32_t agc_const_en;
   uint32_t agc_const_address;
   uint32_t min_bo_insert_2_bfm_lock;
   uint32_t min_snr_avg_db_2_bfm_lock;
   uint32_t max_phy_rate_50M;
   uint32_t max_constellation_all;
   struct moca_max_constellation max_constellation;
   struct moca_snr_margin_table_rs snr_margin_table_rs;
   struct moca_rlapm_table_50 rlapm_table_50;
   struct moca_snr_margin_table_ldpc snr_margin_table_ldpc;
   struct moca_snr_margin_table_ldpc_sec_ch snr_margin_table_ldpc_sec_ch;
   struct moca_snr_margin_table_ldpc_pre5 snr_margin_table_ldpc_pre5;
   struct moca_snr_margin_table_ofdma snr_margin_table_ofdma;
   struct moca_rlapm_table_100 rlapm_table_100;
   struct moca_snr_margin_table_ldpc_pri_ch snr_margin_table_ldpc_pri_ch;
   struct moca_snr_margin_table_pre5_pri_ch snr_margin_table_pre5_pri_ch;
   struct moca_snr_margin_table_pre5_sec_ch snr_margin_table_pre5_sec_ch;
   uint32_t nv_cal_enable;
   uint32_t rlapm_cap_50;
   struct moca_snr_margin_rs snr_margin_rs;
   struct moca_snr_margin_ldpc snr_margin_ldpc;
   struct moca_snr_margin_ldpc_sec_ch snr_margin_ldpc_sec_ch;
   struct moca_snr_margin_ldpc_pre5 snr_margin_ldpc_pre5;
   struct moca_snr_margin_ofdma snr_margin_ofdma;
   uint32_t rlapm_cap_100;
   struct moca_sapm_table_50 sapm_table_50;
   struct moca_sapm_table_100 sapm_table_100;
   struct moca_sapm_table_sec sapm_table_sec;
   struct moca_snr_margin_ldpc_pri_ch snr_margin_ldpc_pri_ch;
   struct moca_snr_margin_pre5_pri_ch snr_margin_pre5_pri_ch;
   struct moca_snr_margin_pre5_sec_ch snr_margin_pre5_sec_ch;
   uint32_t max_frame_size;
   uint32_t min_aggr_waiting_time;
   uint32_t selective_rr;
   uint32_t fragmentation;
   uint32_t ifg_moca20;
   uint32_t map_seed;
   uint32_t max_transmit_time;
   uint32_t max_pkt_aggr;
   struct moca_probe_request probe_request;
   struct moca_rtr_config rtr_config;
   uint32_t tlp_mode;
   uint32_t max_pkt_aggr_bonding;
   uint32_t multicast_mode;
   uint32_t low_pri_q_num;
   uint32_t egr_mc_filter_en;
   uint32_t fc_mode;
   uint32_t pqos_max_packet_size;
   uint32_t per_mode;
   uint32_t policing_en;
   uint32_t orr_en;
   uint32_t brcmtag_enable;
   struct moca_priority_allocations priority_allocations;
   struct moca_egr_mc_addr_filter egr_mc_addr_filter;
   struct moca_mac_aging_int mac_aging;
   uint32_t loopback_en;
   uint32_t mcfilter_enable;
   uint32_t pause_fc_en;
   struct moca_stag_priority stag_priority;
   struct moca_stag_removal stag_removal;
   uint32_t host_qos;
   uint32_t ooo_lmo_threshold;
   struct moca_taboo_channels taboo_channels;
   uint32_t ooo_lmo;
   struct moca_start_ulmo start_ulmo;
   uint32_t rf_band;
   uint32_t rf_switch;
   uint32_t if_access_en;
   uint32_t led_mode;
   struct moca_if_access_table if_access_table;
   uint32_t m1_tx_power_variation;
   uint32_t nc_listening_interval;
   uint32_t nc_heartbeat_interval;
   uint32_t wom_mode_internal;
   uint32_t wom_magic_enable;
   uint32_t pm_restore_on_link_down;
   uint32_t standby_power_state;
   uint32_t wom_mode;
   uint32_t privacy_en;
   uint32_t pmk_exchange_interval;
   uint32_t tek_exchange_interval;
   uint32_t aes_exchange_interval;
   struct moca_aes_pm_key aes_pm_key;
   struct moca_network_password network_password;
   struct moca_password password;
   uint32_t mtm_en;
   uint32_t const_rx_submode;
   uint32_t cir_prints;
   uint32_t snr_prints;
   uint32_t sigma2_prints;
   uint32_t bad_probe_prints;
   struct moca_const_tx_params const_tx_params;
   uint32_t moca_core_trace_enable;
   uint32_t dont_start_moca;
   uint32_t lab_mode;
   uint32_t nc_mode;
   uint32_t rx_tx_packets_per_qm;
   uint32_t extra_rx_packets_per_qm;
   uint32_t target_phy_rate_20;
   uint32_t target_phy_rate_20_turbo;
   uint32_t turbo_en;
   uint32_t res1;
   uint32_t res2;
   uint32_t res3;
   uint32_t res4;
   uint32_t res5;
   uint32_t res6;
   uint32_t res7;
   uint32_t res8;
   uint32_t res9;
   uint32_t init1;
   uint32_t init2;
   uint32_t init3;
   uint32_t init4;
   uint32_t init5;
   uint32_t init6;
   uint32_t init7;
   uint32_t init8;
   uint32_t init9;
   uint32_t lab_snr_graph_set;
   uint32_t block_nack_rate;
   uint32_t res10;
   uint32_t res11;
   uint32_t res12;
   uint32_t res13;
   uint32_t res14;
   uint32_t res15;
   uint32_t res16;
   uint32_t res17;
   uint32_t res18;
   uint32_t res19;
   uint32_t res20;
   uint32_t target_phy_rate_20_turbo_vlper;
   uint32_t target_phy_rate_20_sec_ch;
   uint32_t target_phy_rate_20_turbo_sec_ch;
   uint32_t target_phy_rate_20_turbo_vlper_sec_ch;
   uint32_t cap_phy_rate_en;
   uint32_t cap_target_phy_rate;
   uint32_t cap_snr_base_margin;
   uint32_t map_capture;
   struct moca_lab_iq_diagram_set lab_iq_diagram_set;
   struct moca_lab_tpcap lab_tpcap;
   uint32_t assert_restart;
   uint32_t moca_cpu_freq;
   uint32_t mps_en;
   uint32_t mps_privacy_receive;
   uint32_t mps_privacy_down;
   uint32_t mps_walk_time;
   uint32_t mps_unpaired_time;
   uint32_t mps_state;
   uint32_t privacy_defaults;
/* End of auto-generated anytime struct - Do not edit */
};

