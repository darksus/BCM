// ****************************************************************************
//
// Copyright (c) 2009 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         apm_base.h
//  Generated by:     RDB Utility
//  Creation Date:    12/4/2009
//  Command Line:     rdb.pl bcm3382_a0.rdb2 -header rdb_output/headers_borked -camelcase -nounroll --addrtest=rdb_output/test_borked.c -R
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef APM_BASE_H__
#define APM_BASE_H__


typedef union {
  struct {
    uint32 TxDmaEnableB             :1; 
    uint32 TxDmaEnableA             :1; 
    uint32 RxDmaEnableB             :1; 
    uint32 RxDmaEnableA             :1; 
    uint32 Reserved                 :12;
    uint32 RxPacketSizeB            :8; 
    uint32 RxPacketSizeA            :8; 
  } Bits;
  uint32 Reg32;
}  ApmBaseApmDevControl;

typedef union {
  struct {
    uint32 Reserved                 :21;
    uint32 DevBmuIrq                :1; 
    uint32 DmaPcmTx                 :1; 
    uint32 DmaPcmRx                 :1; 
    uint32 DmaRxOverflowB           :1; 
    uint32 DmaRxOverflowA           :1; 
    uint32 DmaTxUnderflowB          :1; 
    uint32 DmaTxUnderflowA          :1; 
    uint32 DmaBTx                   :1; 
    uint32 DmaBRx                   :1; 
    uint32 DmaATx                   :1; 
    uint32 DmaARx                   :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseApmDevIrqMask;

typedef union {
  struct {
    uint32 Reserved                 :21;
    uint32 DevBmuIrq                :1; 
    uint32 DmaPcmTx                 :1; 
    uint32 DmaPcmRx                 :1; 
    uint32 DmaRxOverflowB           :1; 
    uint32 DmaRxOverflowA           :1; 
    uint32 DmaTxUnderflowB          :1; 
    uint32 DmaTxUnderflowA          :1; 
    uint32 DmaBTx                   :1; 
    uint32 DmaBRx                   :1; 
    uint32 DmaATx                   :1; 
    uint32 DmaARx                   :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseApmDevIrqPend;

typedef union {
  struct {
    uint32 Reserved                 :27;
    uint32 PcmInterrupt             :1; 
    uint32 ApmInterrupt3            :1; 
    uint32 ApmInterrupt2            :1; 
    uint32 ApmInterrupt1            :1; 
    uint32 DevInterrupt             :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseApmDevIrqStatus;

typedef union {
  struct {
    uint32 Reserved                 :2; 
    uint32 AsrcDecAccessCoeffRamB   :1; 
    uint32 AsrcIntAccessCoeffRamB   :1; 
    uint32 YfltrAccessCoeffRamB     :1; 
    uint32 LospdHybalAccessCoeffRamB :1; 
    uint32 HispdHybalAccessCoeffRamB :1; 
    uint32 EqRxAccessCoeffRamB      :1; 
    uint32 EqTxAccessCoeffRamB      :1; 
    uint32 AsrcDecAccessCoeffRamA   :1; 
    uint32 AsrcIntAccessCoeffRamA   :1; 
    uint32 YfltrAccessCoeffRamA     :1; 
    uint32 LospdHybalAccessCoeffRamA :1; 
    uint32 HispdHybalAccessCoeffRamA :1; 
    uint32 EqRxAccessCoeffRamA      :1; 
    uint32 EqTxAccessCoeffRamA      :1; 
    uint32 Reserved2                :7; 
    uint32 CoeffProgWe              :1; 
    uint32 CoeffProgAddr            :8; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmCoeffConfig;

typedef union {
  struct {
    uint32 Reserved                 :12;
    uint32 CoeffProgInput           :20;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmCoeffWrData;

typedef union {
  struct {
    uint32 Reserved                 :21;
    uint32 RegApmIrq3Mask           :11;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmIrqMask3;

typedef union {
  struct {
    uint32 PmBurstDone              :1; 
    uint32 AsrcIntDoneSlewing       :1; 
    uint32 AsrcDecDoneSlewing       :1; 
    uint32 RxPathSat                :1; 
    uint32 EqTxSat                  :1; 
    uint32 EqRxSat                  :1; 
    uint32 EqTxRqstErr              :1; 
    uint32 EqRxRqstErr              :1; 
    uint32 LospdHybalSat            :1; 
    uint32 HispdHybalSat            :1; 
    uint32 HispdHybalRqstErr        :1; 
    uint32 YfltrIir1Sat             :1; 
    uint32 YfltrFirSat              :1; 
    uint32 YfltrIir2Sat             :1; 
    uint32 YfltrIir1AccumSat        :1; 
    uint32 YfltrFirAccumSat         :1; 
    uint32 YfltrIir2AccumSat        :1; 
    uint32 YfltrRqstErr             :1; 
    uint32 NcoSat                   :1; 
    uint32 AsrcIntHrnrTimErr        :1; 
    uint32 AsrcIntHrnrSat           :1; 
    uint32 AsrcIntFirTimErr         :1; 
    uint32 AsrcIntFirBankErr        :1; 
    uint32 AsrcIntFirSat            :1; 
    uint32 AsrcIntHrnrMacSat        :1; 
    uint32 CicIntSat                :1; 
    uint32 DigmodSat0               :1; 
    uint32 DigmodSat1               :1; 
    uint32 TxPathSat                :1; 
    uint32 CicDecSat                :1; 
    uint32 AsrcDecTimErr            :1; 
    uint32 AsrcDecSat               :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmIrqPend1;

typedef union {
  struct {
    uint32 PmBurstDone              :1; 
    uint32 AsrcIntDoneSlewing       :1; 
    uint32 AsrcDecDoneSlewing       :1; 
    uint32 RxPathSat                :1; 
    uint32 EqTxSat                  :1; 
    uint32 EqRxSat                  :1; 
    uint32 EqTxRqstErr              :1; 
    uint32 EqRxRqstErr              :1; 
    uint32 LospdHybalSat            :1; 
    uint32 HispdHybalSat            :1; 
    uint32 HispdHybalRqstErr        :1; 
    uint32 YfltrIir1Sat             :1; 
    uint32 YfltrFirSat              :1; 
    uint32 YfltrIir2Sat             :1; 
    uint32 YfltrIir1AccumSat        :1; 
    uint32 YfltrFirAccumSat         :1; 
    uint32 YfltrIir2AccumSat        :1; 
    uint32 YfltrRqstErr             :1; 
    uint32 NcoSat                   :1; 
    uint32 AsrcIntHrnrTimErr        :1; 
    uint32 AsrcIntHrnrSat           :1; 
    uint32 AsrcIntFirTimErr         :1; 
    uint32 AsrcIntFirBankErr        :1; 
    uint32 AsrcIntFirSat            :1; 
    uint32 AsrcIntHrnrMacSat        :1; 
    uint32 CicIntSat                :1; 
    uint32 DigmodSat0               :1; 
    uint32 DigmodSat1               :1; 
    uint32 TxPathSat                :1; 
    uint32 CicDecSat                :1; 
    uint32 AsrcDecTimErr            :1; 
    uint32 AsrcDecSat               :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmIrqPend2;

typedef union {
  struct {
    uint32 Reserved                 :21;
    uint32 StatsDoneA               :1; 
    uint32 StatsDoneB               :1; 
    uint32 FcwOobA                  :1; 
    uint32 FcwOobB                  :1; 
    uint32 HpfSatA                  :1; 
    uint32 HpfSatB                  :1; 
    uint32 AsrcIntDeltaAdjDoneA     :1; 
    uint32 AsrcIntDeltaAdjDoneB     :1; 
    uint32 LospdHybalRqstErrA       :1; 
    uint32 LospdHybalRqstErrB       :1; 
    uint32 NtpTimeValid             :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmIrqPend3;

typedef union {
  struct {
    uint32 Reserved                 :13;
    uint32 MeanSatA                 :1; 
    uint32 MeanSqSatA               :1; 
    uint32 StatsBusyA               :1; 
    uint32 Reserved2                :2; 
    uint32 MeanSquareAHi            :14;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStats4;

typedef union {
  struct {
    uint32 Reserved                 :13;
    uint32 MeanSatB                 :1; 
    uint32 MeanSqSatB               :1; 
    uint32 StatsBusyB               :1; 
    uint32 Reserved2                :2; 
    uint32 MeanSquareBHi            :14;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStats6;

typedef union {
  struct {
    uint32 Reserved                 :7; 
    uint32 DigmodSatQuant           :1; 
    uint32 DigmodSatCount0          :8; 
    uint32 DigmodSatCount1          :8; 
    uint32 DigmodSatCountQuant      :8; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus1;

typedef union {
  struct {
    uint32 Reserved                 :15;
    uint32 NtpTimeCountHi           :17;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus10;

typedef union {
  struct {
    uint32 Reserved                 :14;
    uint32 NtpTimeCountLo           :18;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus11;

typedef union {
  struct {
    uint32 Reserved                 :28;
    uint32 RingCadenceStopA         :1; 
    uint32 RingOnOffA               :1; 
    uint32 RingCadenceStopB         :1; 
    uint32 RingOnOffB               :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus12;

typedef union {
  struct {
    uint32 HispdHybalCoeffA         :16;
    uint32 HispdHybalCoeffB         :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus13;

typedef union {
  struct {
    uint32 LospdHybalCoeffA         :16;
    uint32 LospdHybalCoeffB         :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus14;

typedef union {
  struct {
    uint32 Reserved                 :7; 
    uint32 DigmodSatQuant           :1; 
    uint32 DigmodSatCount0          :8; 
    uint32 DigmodSatCount1          :8; 
    uint32 DigmodSatCountQuant      :8; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus2;

typedef union {
  struct {
    uint32 AdcFifoUflow             :1; 
    uint32 AdcFifoOvlow             :1; 
    uint32 Reserved                 :2; 
    uint32 AdcFifoDepth             :4; 
    uint32 Reserved2                :2; 
    uint32 SerTstXmtUflow           :1; 
    uint32 SerTstXmtOvlow           :1; 
    uint32 ApNcoSaturated           :1; 
    uint32 ApXmtFifoDepth           :3; 
    uint32 Reserved3                :10;
    uint32 ApRcvUflow               :1; 
    uint32 ApRcvOvlow               :1; 
    uint32 Reserved4                :1; 
    uint32 ApRcvFifoDepth           :3; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus3;

typedef union {
  struct {
    uint32 EqRxCoeff                :16;
    uint32 EqTxCoeff                :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus4;

typedef union {
  struct {
    uint32 AsrcIntCoeff             :16;
    uint32 AsrcDecCoeff             :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus5;

typedef union {
  struct {
    uint32 Reserved                 :12;
    uint32 YfltrCoeff               :20;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus6;

typedef union {
  struct {
    uint32 EqRxCoeff                :16;
    uint32 EqTxCoeff                :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus7;

typedef union {
  struct {
    uint32 AsrcIntCoeff             :16;
    uint32 AsrcDecCoeff             :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus8;

typedef union {
  struct {
    uint32 Reserved                 :12;
    uint32 YfltrCoeff               :20;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegApmStatus9;

typedef union {
  struct {
    uint32 Reserved                 :1; 
    uint32 AsrcDecCoeffSel          :2; 
    uint32 AsrcDecSymAsym           :1; 
    uint32 AsrcDecShft              :4; 
    uint32 Reserved2                :3; 
    uint32 AsrcDecNumSect           :5; 
    uint32 AsrcDecScale             :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaAsrcDecConfig;

typedef union {
  struct {
    uint32 Reserved                 :22;
    uint32 CicDecEqEn               :1; 
    uint32 CicIntEqEn               :1; 
    uint32 Reserved2                :2; 
    uint32 CicIntShft               :3; 
    uint32 CicDecShft               :3; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaCicConfig;

typedef union {
  struct {
    uint32 Reserved                 :16;
    uint32 DigmodDithScale          :8; 
    uint32 Reserved2                :6; 
    uint32 DigmodDemDis             :1; 
    uint32 DigmodDemTone            :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaDigmodConfig;

typedef union {
  struct {
    uint32 SoftInit                 :1; 
    uint32 Reserved                 :3; 
    uint32 EqTxEnable               :1; 
    uint32 EqRxEnable               :1; 
    uint32 EqTxImpResp              :1; 
    uint32 EqRxImpResp              :1; 
    uint32 EqRxShft                 :4; 
    uint32 EqTxShft                 :4; 
    uint32 Reserved2                :1; 
    uint32 EqTxNumTaps              :7; 
    uint32 Reserved3                :1; 
    uint32 EqRxNumTaps              :7; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaEqConfig;

typedef union {
  struct {
    uint32 Reserved                 :26;
    uint32 ClockSource              :2; 
    uint32 FcwShft                  :4; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaFcwConfig2;

typedef union {
  struct {
    uint32 Reserved                 :2; 
    uint32 LospdHybalSmplOffset     :6; 
    uint32 Reserved2                :7; 
    uint32 HpfEn                    :1; 
    uint32 YfltrEn                  :1; 
    uint32 HispdHybalSmplOffset     :3; 
    uint32 Reserved3                :3; 
    uint32 LospdHybalEn             :1; 
    uint32 HispdHybalEn             :1; 
    uint32 Reserved4                :1; 
    uint32 LospdHybalShft           :3; 
    uint32 HispdHybalShft           :3; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaHybalConfig;

typedef union {
  struct {
    uint32 Reserved                 :3; 
    uint32 AsrcIntCoeffSel          :2; 
    uint32 AsrcIntSymAsym           :1; 
    uint32 AsrcIntHrnrShft          :2; 
    uint32 Reserved2                :3; 
    uint32 AsrcIntNumSect           :5; 
    uint32 IsReserved               :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaIntConfig1;

typedef union {
  struct {
    uint32 Reserved                 :9; 
    uint32 AsrcSlewSpeed            :4; 
    uint32 AsrcIntFirShft           :3; 
    uint32 AsrcIntScale             :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaIntConfig2;

typedef union {
  struct {
    uint32 Reserved                 :3; 
    uint32 PmFreq1612               :1; 
    uint32 PmOffTime                :12;
    uint32 Reserved2                :4; 
    uint32 PmOnTime                 :12;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaPmConfig1;

typedef union {
  struct {
    uint32 PmFallInc                :8; 
    uint32 PmRiseInc                :8; 
    uint32 PmScale                  :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaPmConfig2;

typedef union {
  struct {
    uint32 Reserved                 :13;
    uint32 PmEnable                 :1; 
    uint32 PmBurstStart             :1; 
    uint32 PmBurstCont              :1; 
    uint32 PmBurstLength            :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaPmConfig3;

typedef union {
  struct {
    uint32 AudioDacEdge             :1; 
    uint32 AudioAdcEdge             :1; 
    uint32 IsReserved               :19;
    uint32 AsrcEn                   :1; 
    uint32 SlewInstant              :1; 
    uint32 RxTx98kLpbk              :1; 
    uint32 AdcDacLpbk               :1; 
    uint32 IsReservedAlso           :1; 
    uint32 AdcMuxCtrl               :1; 
    uint32 Rx98kMuxCtrlA            :2; 
    uint32 NetworkLpbk              :1; 
    uint32 RxInMuxCtrl              :2; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChaTestConfig;

typedef union {
  struct {
    uint32 Reserved                 :1; 
    uint32 AsrcDecCoeffSel          :2; 
    uint32 AsrcDecSymAsym           :1; 
    uint32 AsrcDecShft              :4; 
    uint32 Reserved2                :3; 
    uint32 AsrcDecNumSect           :5; 
    uint32 AsrcDecScale             :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbAsrcDecConfig;

typedef union {
  struct {
    uint32 Reserved                 :22;
    uint32 CicDecEqEn               :1; 
    uint32 CicIntEqEn               :1; 
    uint32 Reserved2                :2; 
    uint32 CicIntShft               :3; 
    uint32 CicDecShft               :3; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbCicConfig;

typedef union {
  struct {
    uint32 Reserved                 :16;
    uint32 DigmodDithScale          :8; 
    uint32 Reserved2                :6; 
    uint32 DigmodDemDis             :1; 
    uint32 DigmodDemTone            :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbDigmodConfig;

typedef union {
  struct {
    uint32 SoftInit                 :1; 
    uint32 Reserved                 :3; 
    uint32 EqTxEnable               :1; 
    uint32 EqRxEnable               :1; 
    uint32 EqTxImpResp              :1; 
    uint32 EqRxImpResp              :1; 
    uint32 EqRxShft                 :4; 
    uint32 EqTxShft                 :4; 
    uint32 Reserved2                :1; 
    uint32 EqTxNumTaps              :7; 
    uint32 Reserved3                :1; 
    uint32 EqRxNumTaps              :7; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbEqConfig;

typedef union {
  struct {
    uint32 Reserved                 :26;
    uint32 ClockSource              :2; 
    uint32 FcwShft                  :4; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbFcwConfig2;

typedef union {
  struct {
    uint32 Reserved                 :2; 
    uint32 LospdHybalSmplOffset     :6; 
    uint32 Reserved2                :7; 
    uint32 HpfEn                    :1; 
    uint32 YfltrEn                  :1; 
    uint32 HispdHybalSmplOffset     :3; 
    uint32 Reserved3                :3; 
    uint32 LospdHybalEn             :1; 
    uint32 HispdHybalEn             :1; 
    uint32 Reserved4                :1; 
    uint32 LospdHybalShft           :3; 
    uint32 HispdHybalShft           :3; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbHybalConfig;

typedef union {
  struct {
    uint32 Reserved                 :3; 
    uint32 AsrcIntCoeffSel          :2; 
    uint32 AsrcIntSymAsym           :1; 
    uint32 AsrcIntHrnrShft          :2; 
    uint32 Reserved2                :3; 
    uint32 AsrcIntNumSect           :5; 
    uint32 IsReserved               :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbIntConfig1;

typedef union {
  struct {
    uint32 Reserved                 :9; 
    uint32 AsrcSlewSpeed            :4; 
    uint32 AsrcIntFirShft           :3; 
    uint32 AsrcIntScale             :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbIntConfig2;

typedef union {
  struct {
    uint32 Reserved                 :3; 
    uint32 PmFreq1612               :1; 
    uint32 PmOffTime                :12;
    uint32 Reserved2                :4; 
    uint32 PmOnTime                 :12;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbPmConfig1;

typedef union {
  struct {
    uint32 PmFallInc                :8; 
    uint32 PmRiseInc                :8; 
    uint32 PmScale                  :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbPmConfig2;

typedef union {
  struct {
    uint32 Reserved                 :13;
    uint32 PmEnable                 :1; 
    uint32 PmBurstStart             :1; 
    uint32 PmBurstCont              :1; 
    uint32 PmBurstLength            :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbPmConfig3;

typedef union {
  struct {
    uint32 IsReserved               :21;
    uint32 AsrcEn                   :1; 
    uint32 SlewInstant              :1; 
    uint32 RxTx98kLpbk              :1; 
    uint32 AdcDacLpbk               :1; 
    uint32 IsReservedAlso           :1; 
    uint32 AdcMuxCtrl               :1; 
    uint32 Rx98kMuxCtrlB            :2; 
    uint32 NetworkLpbk              :1; 
    uint32 RxInMuxCtrl              :2; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegChbTestConfig;

typedef union {
  struct {
    uint32 Reserved                 :7; 
    uint32 PwrdnRing                :1; 
    uint32 PwrdnRefamp              :1; 
    uint32 PwrdnBndgap              :1; 
    uint32 Reserved2                :4; 
    uint32 BgOutTempco              :2; 
    uint32 Reserved3                :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegCodecConfig0;

typedef union {
  struct {
    uint32 Reserved                 :6; 
    uint32 PwrdnHvgA                :1; 
    uint32 PwrdnHvgB                :1; 
    uint32 Reserved2                :1; 
    uint32 HvgABiasctl              :3; 
    uint32 Reserved3                :1; 
    uint32 HvgBBiasctl              :3; 
    uint32 Reserved4                :6; 
    uint32 PwrdnBmuA                :1; 
    uint32 PwrdnBmuB                :1; 
    uint32 Reserved5                :1; 
    uint32 BmuABiasctl              :3; 
    uint32 Reserved6                :1; 
    uint32 BmuBBiasctl              :3; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegCodecConfig1;

typedef union {
  struct {
    uint32 Reserved                 :2; 
    uint32 PgaCtlVadcA              :2; 
    uint32 Reserved2                :2; 
    uint32 PwrdnVadcA               :1; 
    uint32 PupFastVadcA             :1; 
    uint32 Reserved3                :2; 
    uint32 ShuffCtlVadcA            :2; 
    uint32 Reserved4                :2; 
    uint32 DithCtlVadcA             :2; 
    uint32 Reserved5                :2; 
    uint32 FlashctlVadcA            :2; 
    uint32 Reserved6                :2; 
    uint32 Int1bCtlVadcA            :2; 
    uint32 Reserved7                :2; 
    uint32 Int2bCtlVadcA            :2; 
    uint32 Reserved8                :1; 
    uint32 VocmCtlVadcA             :3; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegCodecConfig2;

typedef union {
  struct {
    uint32 Reserved                 :2; 
    uint32 PgaCtlVadcB              :2; 
    uint32 Reserved2                :2; 
    uint32 PwrdnVadcB               :1; 
    uint32 PupFastVadcB             :1; 
    uint32 Reserved3                :2; 
    uint32 ShuffCtlVadcB            :2; 
    uint32 Reserved4                :2; 
    uint32 DithCtlVadcB             :2; 
    uint32 Reserved5                :2; 
    uint32 FlashctlVadcB            :2; 
    uint32 Reserved6                :2; 
    uint32 Int1bCtlVadcB            :2; 
    uint32 Reserved7                :2; 
    uint32 Int2bCtlVadcB            :2; 
    uint32 Reserved8                :1; 
    uint32 VocmCtlVadcB             :3; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegCodecConfig3;

typedef union {
  struct {
    uint32 Reserved                 :1; 
    uint32 VrefCtlVdac              :3; 
    uint32 Reserved2                :3; 
    uint32 PwrdnRefVdac             :1; 
    uint32 Reserved3                :6; 
    uint32 PwrdnVdacA               :1; 
    uint32 TestenVdacA              :1; 
    uint32 Reserved4                :1; 
    uint32 DrvvocmctlVdac           :3; 
    uint32 Reserved5                :3; 
    uint32 PgaGainCtlVdacA          :1; 
    uint32 Reserved6                :1; 
    uint32 PwrdnVdacB               :1; 
    uint32 TestenVdacB              :1; 
    uint32 PgaGainCtlVdacB          :1; 
    uint32 Reserved7                :4; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegCodecConfig4;

typedef union {
  struct {
    uint32 Ckby2EnVadc              :1; 
    uint32 PwrdnRefVadc             :1; 
    uint32 RefCtlVadc               :3; 
    uint32 Reserved                 :18;
    uint32 CtlVdac                  :2; 
    uint32 CmInCtlVadcB             :3; 
    uint32 CmInCtlVadcA             :3; 
    uint32 InpcmCtlVadc             :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegCodecConfig5;

typedef union {
  struct {
    uint32 DpllSoftInit             :1; 
    uint32 DpllForceAcq             :1; 
    uint32 DpllOpenLoop             :1; 
    uint32 DpllConstK               :1; 
    uint32 Reserved                 :17;
    uint32 DpllPhsThshld            :7; 
    uint32 DpllK0Max                :4; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegDpllCntrl;

typedef union {
  struct {
    uint32 DpllRefDiv               :16;
    uint32 DpllLocalDiv             :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegDpllDiv;

typedef union {
  struct {
    uint32 DpllInSync               :1; 
    uint32 DpllAcqFreqValid         :1; 
    uint32 Reserved                 :18;
    uint32 DpllK0                   :4; 
    uint32 DpllPhsErr               :8; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegDpllStatus;

typedef union {
  struct {
    uint32 Reserved                 :20;
    uint32 FcwLimit                 :4; 
    uint32 Reserved2                :3; 
    uint32 LoadFcwNomA              :1; 
    uint32 LoadFcwNomB              :1; 
    uint32 LoadMiscB                :1; 
    uint32 LoadMiscA                :1; 
    uint32 LoadNtp                  :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegFcwConfig2;

typedef union {
  struct {
    uint32 Reserved                 :1; 
    uint32 ApmYFltrTmB              :2; 
    uint32 ApmYFltrTmA              :2; 
    uint32 ApmEqCoeffRamTmTxB       :2; 
    uint32 ApmEqCoeffRamTmTxA       :2; 
    uint32 ApmEqCoeffRamTmRxB       :2; 
    uint32 ApmEqCoeffRamTmRxA       :2; 
    uint32 ApmEqDataRamTmTxB        :2; 
    uint32 ApmEqDataRamTmTxA        :2; 
    uint32 ApmEqDataRamTmRxB        :2; 
    uint32 ApmEqDataRamTmRxA        :2; 
    uint32 BmuBusMainIfTm           :2; 
    uint32 P16CoreInstRomTm         :5; 
    uint32 P16CoreInstMemTm         :4; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegMbist0;

typedef union {
  struct {
    uint32 Reserved                 :16;
    uint32 AsrcInterpfirDataRamTmB  :2; 
    uint32 AsrcInterpfirCoeffRamTmB :2; 
    uint32 AsrcInterpfirDataRamTmA  :2; 
    uint32 AsrcInterpfirCoeffRamTmA :2; 
    uint32 AsrcDecDataRamTmB        :2; 
    uint32 AsrcDecCoeffRamTmB       :2; 
    uint32 AsrcDecDataRamTmA        :2; 
    uint32 AsrcDecCoeffRamTmA       :2; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegMbist1;

typedef union {
  struct {
    uint32 IsReserved               :16;
    uint32 NtpTimeDvd               :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegNtpConfig1;

typedef union {
  struct {
    uint32 Reserved                 :31;
    uint32 NtpReadTime              :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegNtpConfig2;

typedef union {
  struct {
    uint32 RingScale                :16;
    uint32 RingOffset               :16;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegRingConfig1;

typedef union {
  struct {
    uint32 Reserved                 :7; 
    uint32 RingGenEnableB           :1; 
    uint32 Reserved2                :3; 
    uint32 RingGenEnableA           :1; 
    uint32 Reserved3                :1; 
    uint32 RingCrestFactor          :3; 
    uint32 RingOmegaNormB           :8; 
    uint32 RingOmegaNormA           :8; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegRingConfig2;

typedef union {
  struct {
    uint32 RingStartCadenceB        :1; 
    uint32 RingStartCadenceA        :1; 
    uint32 RingBreakPhaseSignB      :1; 
    uint32 RingBreakPhaseSignA      :1; 
    uint32 Reserved                 :12;
    uint32 RingBreakPhaseB          :8; 
    uint32 RingBreakPhaseA          :8; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegRingConfig3;

typedef union {
  struct {
    uint32 Reserved                 :28;
    uint32 RingStopNextBreakB       :1; 
    uint32 RingStopNextBreakA       :1; 
    uint32 RingStopImmedB           :1; 
    uint32 RingStopImmedA           :1; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegRingConfig4;

typedef union {
  struct {
    uint32 SoftInitSerTst           :1; 
    uint32 SerTstClkDir             :1; 
    uint32 Reserved                 :2; 
    uint32 AudSerTstFcwMuxCtrl      :1; 
    uint32 IsReserved               :27;
  } Bits;
  uint32 Reg32;
}  ApmBaseRegSerTstConfig;

typedef union {
  struct {
    uint32 Reserved                 :16;
    uint32 StartStats               :1; 
    uint32 Reserved2                :3; 
    uint32 StatsMuxCtlVadca         :1; 
    uint32 StatsMuxCtlVadcb         :1; 
    uint32 StatsChopEnableA         :1; 
    uint32 StatsChopEnableB         :1; 
    uint32 StatsDuration            :4; 
    uint32 StatsChopPeriod          :4; 
  } Bits;
  uint32 Reg32;
}  ApmBaseRegStatsConfig;

typedef struct {
  ApmBaseApmDevIrqStatus              ApmDevIrqStatus;         
  ApmBaseApmDevIrqPend                ApmDevIrqPend;           
  ApmBaseApmDevIrqMask                ApmDevIrqMask;           
  ApmBaseApmDevControl                ApmDevControl;           
  ApmBaseRegApmCoeffWrData            RegApmCoeffWrData;       
  ApmBaseRegApmCoeffConfig            RegApmCoeffConfig;       
  ApmBaseRegChaTestConfig             RegChaTestConfig;        
  ApmBaseRegChbTestConfig             RegChbTestConfig;        
  ApmBaseRegChaEqConfig               RegChaEqConfig;          
  ApmBaseRegChaHybalConfig            RegChaHybalConfig;       
  ApmBaseRegChaIntConfig1             RegChaIntConfig1;        
  ApmBaseRegChaIntConfig2             RegChaIntConfig2;        
  ApmBaseRegChaPmConfig1              RegChaPmConfig1;         
  ApmBaseRegChaPmConfig2              RegChaPmConfig2;         
  ApmBaseRegChaPmConfig3              RegChaPmConfig3;         
  ApmBaseRegChaCicConfig              RegChaCicConfig;         
  ApmBaseRegChaAsrcDecConfig          RegChaAsrcDecConfig;     
  uint32                              RegChaFcwConfig1;        
  ApmBaseRegChaFcwConfig2             RegChaFcwConfig2;        
  ApmBaseRegChaDigmodConfig           RegChaDigmodConfig;      
  ApmBaseRegChbEqConfig               RegChbEqConfig;          
  ApmBaseRegChbHybalConfig            RegChbHybalConfig;       
  ApmBaseRegChbIntConfig1             RegChbIntConfig1;        
  ApmBaseRegChbIntConfig2             RegChbIntConfig2;        
  ApmBaseRegChbPmConfig1              RegChbPmConfig1;         
  ApmBaseRegChbPmConfig2              RegChbPmConfig2;         
  ApmBaseRegChbPmConfig3              RegChbPmConfig3;         
  ApmBaseRegChbCicConfig              RegChbCicConfig;         
  ApmBaseRegChbAsrcDecConfig          RegChbAsrcDecConfig;     
  uint32                              RegChbFcwConfig1;        
  ApmBaseRegChbFcwConfig2             RegChbFcwConfig2;        
  ApmBaseRegChbDigmodConfig           RegChbDigmodConfig;      
  uint32                              RegFcwConfig1;           
  ApmBaseRegFcwConfig2                RegFcwConfig2;           
  ApmBaseRegNtpConfig1                RegNtpConfig1;           
  ApmBaseRegNtpConfig2                RegNtpConfig2;           
  ApmBaseRegRingConfig1               RegRingConfig1;          
  ApmBaseRegRingConfig2               RegRingConfig2;          
  ApmBaseRegRingConfig3               RegRingConfig3;          
  ApmBaseRegRingConfig4               RegRingConfig4;          
  ApmBaseRegSerTstConfig              RegSerTstConfig;         
  uint32                              RegAudioSpare;           
  ApmBaseRegStatsConfig               RegStatsConfig;          
  ApmBaseRegApmStatus1                RegApmStatus1;           
  ApmBaseRegApmStatus2                RegApmStatus2;           
  ApmBaseRegApmStatus3                RegApmStatus3;           
  ApmBaseRegApmStatus4                RegApmStatus4;           
  ApmBaseRegApmStatus5                RegApmStatus5;           
  ApmBaseRegApmStatus6                RegApmStatus6;           
  ApmBaseRegApmStatus7                RegApmStatus7;           
  ApmBaseRegApmStatus8                RegApmStatus8;           
  ApmBaseRegApmStatus9                RegApmStatus9;           
  ApmBaseRegApmStatus10               RegApmStatus10;          
  ApmBaseRegApmStatus11               RegApmStatus11;          
  ApmBaseRegApmStatus12               RegApmStatus12;          
  ApmBaseRegApmStatus13               RegApmStatus13;          
  ApmBaseRegApmStatus14               RegApmStatus14;          
  uint32                              RegApmStats1;            
  uint32                              RegApmStats2;            
  uint32                              RegApmStats3;            
  ApmBaseRegApmStats4                 RegApmStats4;            
  uint32                              RegApmStats5;            
  ApmBaseRegApmStats6                 RegApmStats6;            
  uint32                              RegApmAudioFcwA;         
  uint32                              RegApmAudioFcwB;         
  ApmBaseRegApmIrqPend1               RegApmIrqPend1;          
  uint32                              RegApmIrqMask1;          
  ApmBaseRegApmIrqPend2               RegApmIrqPend2;          
  uint32                              RegApmIrqMask2;          
  ApmBaseRegApmIrqPend3               RegApmIrqPend3;          
  ApmBaseRegApmIrqMask3               RegApmIrqMask3;          
  uint32                              RegSpare2;               
  ApmBaseRegCodecConfig0              RegCodecConfig0;         
  ApmBaseRegCodecConfig1              RegCodecConfig1;         
  ApmBaseRegCodecConfig2              RegCodecConfig2;         
  ApmBaseRegCodecConfig3              RegCodecConfig3;         
  ApmBaseRegCodecConfig4              RegCodecConfig4;         
  ApmBaseRegCodecConfig5              RegCodecConfig5;         
  uint32                              RegCodecConfig6;         
  uint32                              RegCodecConfig7;         
  uint32                              RegCodecConfig8;         
  uint32                              RegApmCodecFb0;          
  ApmBaseRegMbist0                    RegMbist0;               
  ApmBaseRegMbist1                    RegMbist1;               
  uint32                              RegOtp0;                 
  uint32                              RegOtp1;                 
  uint32                              RegDiagReadback;         
  uint32                              RegAudioSpare2;          
  ApmBaseRegDpllCntrl                 RegDpllCntrl;            
  uint32                              RegDpllNomFreq;          
  ApmBaseRegDpllDiv                   RegDpllDiv;              
  uint32                              RegDpllAcqFreq;          
  ApmBaseRegDpllStatus                RegDpllStatus;           
}  ApmBaseApmBaseApmBase;

#endif 



