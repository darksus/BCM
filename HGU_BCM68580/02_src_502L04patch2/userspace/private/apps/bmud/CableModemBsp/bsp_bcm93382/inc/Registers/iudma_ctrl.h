// ****************************************************************************
//
// Copyright (c) 2009 Broadcom Corporation
//
// This program is the proprietary software of Broadcom Corporation and/or
// its licensors, and may only be used, duplicated, modified or distributed
// pursuant to the terms and conditions of a separate, written license
// agreement executed between you and Broadcom (an "Authorized License").
// Except as set forth in an Authorized License, Broadcom grants no license
// (express or implied), right to use, or waiver of any kind with respect to
// the Software, and Broadcom expressly reserves all rights in and to the
// Software and all intellectual property rights therein.  IF YOU HAVE NO
// AUTHORIZED LICENSE, THEN YOU HAVE NO RIGHT TO USE THIS SOFTWARE IN ANY WAY,
// AND SHOULD IMMEDIATELY NOTIFY BROADCOM AND DISCONTINUE ALL USE OF THE
// SOFTWARE.  
//
// Except as expressly set forth in the Authorized License,
//
// 1.     This program, including its structure, sequence and organization,
// constitutes the valuable trade secrets of Broadcom, and you shall use all
// reasonable efforts to protect the confidentiality thereof, and to use this
// information only in connection with your use of Broadcom integrated circuit
// products.
//
// 2.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED
// "AS IS" AND WITH ALL FAULTS AND BROADCOM MAKES NO PROMISES, REPRESENTATIONS
// OR WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
// RESPECT TO THE SOFTWARE.  BROADCOM SPECIFICALLY DISCLAIMS ANY AND ALL
// IMPLIED WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR
// A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
// ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. YOU ASSUME
// THE ENTIRE RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE.
//
// 3.     TO THE MAXIMUM EXTENT PERMITTED BY LAW, IN NO EVENT SHALL BROADCOM
// OR ITS LICENSORS BE LIABLE FOR (i) CONSEQUENTIAL, INCIDENTAL, SPECIAL,
// INDIRECT, OR EXEMPLARY DAMAGES WHATSOEVER ARISING OUT OF OR IN ANY WAY
// RELATING TO YOUR USE OF OR INABILITY TO USE THE SOFTWARE EVEN IF BROADCOM
// HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES; OR (ii) ANY AMOUNT IN
// EXCESS OF THE AMOUNT ACTUALLY PAID FOR THE SOFTWARE ITSELF OR U.S. $1,
// WHICHEVER IS GREATER. THESE LIMITATIONS SHALL APPLY NOTWITHSTANDING ANY
// FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED REMEDY.
//
// ****************************************************************************
//
//  Filename:         iudma_ctrl.h
//  Generated by:     RDB Utility
//  Creation Date:    12/4/2009
//  Command Line:     rdb.pl bcm3382_a0.rdb2 -header rdb_output/headers_borked -camelcase -nounroll --addrtest=rdb_output/test_borked.c -R
// ****************************************************************************
//
// IMPORTANT: DO NOT MODIFY, THIS IS AN AUTOGENERATED FILE. 
// Please modify the source .rdb file instead if you need to change this file. 
// Contact Jeff Bauch if you need more information.
//
// ****************************************************************************
#ifndef IUDMA_CTRL_H__
#define IUDMA_CTRL_H__


typedef union {
  struct {
    uint32 Reserved                 :27;
    uint32 DisableBufWwa            :1; 
    uint32 Reserved2                :1; 
    uint32 BufHalt                  :1; 
    uint32 PktHalt                  :1; 
    uint32 EnDma                    :1; 
  } Bits;
  uint32 Reg32;
}  IudmaCtrlChConfig;

typedef union {
  struct {
    uint32 Reserved                 :24;
    uint32 DiagSelB                 :4; 
    uint32 DiagSelA                 :4; 
  } Bits;
  uint32 Reg32;
}  IudmaCtrlChDebug;

typedef union {
  struct {
    uint32 Force                    :1; 
    uint32 Reserved                 :15;
    uint32 FcBufAlloc               :16;
  } Bits;
  uint32 Reg32;
}  IudmaCtrlChFcBufAlloc;

typedef union {
  struct {
    uint32 Reserved                 :16;
    uint32 FcHighThr                :16;
  } Bits;
  uint32 Reg32;
}  IudmaCtrlChFcHighThr;

typedef union {
  struct {
    uint32 Reserved                 :16;
    uint32 FcLowThr                 :16;
  } Bits;
  uint32 Reg32;
}  IudmaCtrlChFcLowThr;

typedef union {
  struct {
    uint32 Reserved                 :29;
    uint32 Notvld                   :1; 
    uint32 Pdone                    :1; 
    uint32 Bdone                    :1; 
  } Bits;
  uint32 Reg32;
}  IudmaCtrlChIntMask;

typedef union {
  struct {
    uint32 Reserved                 :29;
    uint32 Notvld                   :1; 
    uint32 Pdone                    :1; 
    uint32 Bdone                    :1; 
  } Bits;
  uint32 Reg32;
}  IudmaCtrlChIntStatus;

typedef union {
  struct {
    uint32 Reserved                 :25;
    uint32 MaxBurst                 :7; 
  } Bits;
  uint32 Reg32;
}  IudmaCtrlChMaxBurst;

typedef union {
  struct {
    uint32 Reserved                 :16;
    uint32 ChReset                  :16;
  } Bits;
  uint32 Reg32;
}  IudmaCtrlChReset;

typedef union {
  struct {
    uint32 State                    :2; 
    uint32 Reserved                 :2; 
    uint32 BytesDone                :12;
    uint32 Reserved2                :3; 
    uint32 RingOffset               :13;
  } Bits;
  uint32 Reg32;
}  IudmaCtrlChStateRam2;

typedef union {
  struct {
    uint32 Reserved                 :2; 
    uint32 FlowctlCh3               :1; 
    uint32 FlowctlCh1               :1; 
    uint32 NumChs                   :4; 
    uint32 Reserved2                :21;
    uint32 FlowcCh3                 :1; 
    uint32 FlowcCh1                 :1; 
    uint32 IudmaEn                  :1; 
  } Bits;
  uint32 Reg32;
}  IudmaCtrlCtrlConfig;

typedef struct {
  IudmaCtrlChConfig                   Config;                  
  IudmaCtrlChIntStatus                InterruptStatus;         
  IudmaCtrlChIntMask                  InterruptMask;           
  IudmaCtrlChMaxBurst                 InterruptMaxburst;       
}  IudmaCtrlChannelCfgRegs;

typedef struct {
  uint32                              Stram1;                  
  IudmaCtrlChStateRam2                Stram2;                  
  uint32                              Stram3;                  
  uint32                              Stram4;                  
}  IudmaCtrlChannelCfgStram;

typedef struct {
  IudmaCtrlCtrlConfig                 CtrlConfig;              
  IudmaCtrlChFcLowThr                 Ch1FlowControlLowThresh; 
  IudmaCtrlChFcHighThr                Ch1FlowControlHighThresh;
  IudmaCtrlChFcBufAlloc               Ch1FlowControlBufferAllocation;
  IudmaCtrlChFcLowThr                 Ch3FlowControlLowThresh; 
  IudmaCtrlChFcHighThr                Ch3FlowControlHighThresh;
  IudmaCtrlChFcBufAlloc               Ch3FlowControlBufferAllocation;
  IudmaCtrlChReset                    ChannelReset;            
  IudmaCtrlChDebug                    ChannelDebug;            
}  IudmaCtrlCtrlRegs;

#endif 



